{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./src/components/StakesFreeCirculationProportion/chart.vue","webpack:///src/components/StakesFreeCirculationProportion/chart.vue","webpack:///./src/components/StakesFreeCirculationProportion/chart.vue?5932","webpack:///./src/api/stakesFreeCirculationProportion.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./node_modules/comma-number/index.js","webpack:///./src/api/stakesGiversUsers.js"],"names":["_nonIterableSpread","TypeError","module","exports","__esModule","global","toIntegerOrInfinity","toString","requireObjectCoercible","RangeError","count","str","this","result","n","Infinity","_iterableToArray","iter","Symbol","iterator","Array","from","arrayLikeToArray","require","_arrayWithoutHoles","arr","isArray","uncurryThis","valueOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_toConsumableArray","render","staticRenderFns","extends","data","options","responsive","maintainAspectRatio","title","display","text","fontSize","fontStyle","mounted","stakesFreeCirculationProportion","id","beforeDraw","ctx","labels","datasets","label","backgroundColor","component","stakesGiversUsers","commaNumber","response","TotalAssets","assets","StakesAssetsPercents","Math","round","UsersAssetsPercents","$","thisNumberValue","$repeat","fails","String","floor","repeat","stringSlice","slice","un$ToFixed","toFixed","pow","x","acc","log","x2","multiply","c","index","c2","divide","dataToString","s","t","length","FORCED","target","proto","forced","fractionDigits","e","z","j","k","number","fractDigits","sign","inputNumber","optionalSeparator","optionalDecimalChar","decimalChar","stringNumber","Number","replace","isInteger","isNaN","isFinite","decimalIndex","lastIndexOf","decimal","parts","parse","push","join","string","separator","i","strings","substr","bindWith","AggregationFn","client","utils","Burning","type","collection","fields","field","fn","SUM","filter","in","burner","Stakes","code_hash","depoolV3CodeHash","depoolBroxusCodeHash","electorCodeHash","Givers","givers","Total","net","query","coldTons","aggregateAccounts","operations","batch_query","BurningAssets","results","oneTon","StakesAssets","GiversAssets","coldTonsAssets","UsersAssets","BurningAssetsPercents","GiversAssetsPercents","coldTonsPercents","console"],"mappings":"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","file":"js/chunk-bb8e9766.c8969ec8.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar RangeError = global.RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var uncurryThis = require('../internals/function-uncurry-this');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = uncurryThis(1.0.valueOf);\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var render, staticRenderFns\nimport script from \"./chart.vue?vue&type=script&lang=js&\"\nexport * from \"./chart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport { Doughnut } from \"vue-chartjs\";\nimport { stakesFreeCirculationProportion } from \"../../api/stakesFreeCirculationProportion\";\nexport default {\n  extends: Doughnut,\n  data() {\n    return {\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: \"Stakes vs. Free Circulation\",\n          fontSize: 25,\n          fontStyle: \"normal\",\n        },\n      },\n    };\n  },\n  async mounted() {   \n      const data = await stakesFreeCirculationProportion();        \n      this.addPlugin({\n      id: 'Doughnut',\n      beforeDraw: function(chart) {\n        var width = chart.chart.width;\n        var height = chart.chart.height;       \n        var ctx = chart.chart.ctx;\n\n        ctx.restore();\n        var fontSize = (height / 314).toFixed(2);\n        ctx.font = fontSize + \"em sans-serif\";\n        ctx.textBaseline = \"middle\";\n\n        var text = data.TotalAssets;        \n        var textX = Math.round((width - ctx.measureText(text).width) / 2);\n        var textY = height/(1.65);        \n\n         ctx.fillText(text, textX, textY);\n         ctx.save();\n       }\n     });    \n      this.renderChart(\n      {\n        labels: data.labels,\n        datasets: [\n          {\n            label: \"Stakes vs. Free Circulation\", \n            backgroundColor: [\"blue\", \"pink\"],\n            data: data.assets,\n          },\n        ],\n      },      \n      this.options\n    ); \n  }\n};\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"","\nconst { stakesGiversUsers } = require(\"./stakesGiversUsers\");\nconst commaNumber = require('comma-number');\nconst stakesFreeCirculationProportion = async () => {\n    const response = await stakesGiversUsers();\n\n    const TotalAssets = response.assets[1] + response.assets[3];\n    const StakesAssetsPercents = Math.round(response.assets[1] / TotalAssets * 100);\n    const UsersAssetsPercents = Math.round(response.assets[3] / TotalAssets * 100);\n    return {\n        assets: [\n            response.assets[1],\n            response.assets[3],\n        ],\n        labels: [\n            `STAKES: ${commaNumber(response.assets[1])} EVERs(${StakesAssetsPercents})%`,\n            `FREE CIRCULATION: ${commaNumber(response.assets[3])} EVERs(${UsersAssetsPercents})%`,\n        ],\n        TotalAssets: commaNumber(TotalAssets)\n    }\n}\n\n module.exports = {\n     stakesFreeCirculationProportion\n }\n//stakesFreeCirculationProportion();","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar String = global.String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar un$ToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return un$ToFixed(0.00008, 3) !== '0.000' ||\n    un$ToFixed(0.9, 0) !== '1' ||\n    un$ToFixed(1.255, 2) !== '1.25' ||\n    un$ToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  un$ToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","'use strict'\n\n// return a string with the provided number formatted with commas.\n// can specify either a Number or a String.\nfunction commaNumber(inputNumber, optionalSeparator, optionalDecimalChar) {\n\n  // default `decimalChar` is a period\n  const decimalChar = optionalDecimalChar || '.'\n\n  let stringNumber // we assign this in the switch block and need it later.\n\n  {\n    let number // we assign this in the switch block and need it right after.\n\n    switch (typeof inputNumber) {\n\n      case 'string':\n\n        // if there aren't enough digits to need separators then return it\n        // NOTE: some numbers which are too small will get passed this\n        //       when they have decimal values which make them too long here.\n        //       but, the number value check after this switch will catch it.\n        if (inputNumber.length < (inputNumber[0] === '-' ? 5 : 4)) {\n          return inputNumber\n        }\n\n        // remember it as a string in `stringNumber` and convert to a Number\n        stringNumber = inputNumber\n\n        // if they're not using the Node standard decimal char then replace it\n        // before converting.\n        number = Number(\n          (decimalChar !== '.') ? stringNumber.replace(decimalChar, '.') : stringNumber\n        )\n        break\n\n      // convert to a string.\n      // NOTE: don't check if the number is too small before converting\n      //       because we'll need to return `stringNumber` anyway.\n      case 'number':\n        stringNumber = String(inputNumber)\n        number       = inputNumber\n        // create the string version with the decimalChar they specified.\n        // this matches what the above case 'string' produces,\n        // and, fixes the bug *not* doing this caused.\n        if ('.' !== decimalChar && !Number.isInteger(inputNumber)) {\n          stringNumber = stringNumber.replace('.', decimalChar)\n        }\n        break\n\n      // return invalid type as-is\n      default: return inputNumber\n    }\n\n    // when it doesn't need a separator or isn't a number then return it\n    if ((-1000 < number && number < 1000) || isNaN(number) || !isFinite(number)) {\n      return stringNumber\n    }\n  }\n\n  {\n    // strip off decimal value to add back in later\n    const decimalIndex = stringNumber.lastIndexOf(decimalChar)\n    let decimal\n    if (decimalIndex > -1) {\n      decimal = stringNumber.slice(decimalIndex)\n      stringNumber = stringNumber.slice(0, decimalIndex)\n    }\n\n    // finally, parse the string. Note, default 'separator' is a comma.\n    const parts = parse(stringNumber, optionalSeparator || ',')\n\n    // if there's a decimal value then add it to the parts.\n    if (decimal) {// NOTE: we sliced() it off including the decimalChar\n      parts.push(decimal)\n    }\n\n    // combine all parts for the final string (note, has separators).\n    return parts.join('')\n  }\n}\n\nfunction parse(string, separator) {\n\n  // find first index to split the string at (where 1st separator goes).\n  let i = ((string.length - 1) % 3) + 1\n\n  // above calculation is wrong when num is negative and a certain size.\n  if (i === 1 && (string[0] === '-')) {\n    i = 4  // example: -123,456,789  start at 4, not 1.\n  }\n\n  const strings = [ // holds the string parts\n    string.slice(0, i) // grab part before the first separator\n  ]\n\n  // split remaining string in groups of 3 where a separator belongs\n  for (; i < string.length; i += 3) {\n    strings.push(separator, string.substr(i, 3))\n  }\n\n  return strings\n}\n\n\n// convenience function for currying style:\n//   const format = commaNumber.bindWith(',', '.')\nfunction bindWith(separator, decimalChar) {\n  return function(number) {\n    return commaNumber(number, separator, decimalChar)\n  }\n}\n\nmodule.exports = commaNumber\nmodule.exports.bindWith = bindWith\n","\nconst { AggregationFn, client } = require(\"./client/webClient\");\nconst commaNumber = require('comma-number');\nconst utils = require('./utils');\n\nconst stakesGiversUsers = async () => {\n    const Burning =\n    {\n        type: \"AggregateCollection\",\n        collection: \"accounts\",\n        fields: [\n            {\n                field: \"balance\",\n                fn: AggregationFn.SUM\n            }\n        ],\n        filter: {\n            id: {\n                in: [\n                    \"0:0000000000000000000000000000000000000000000000000000000000000000\",\n                    utils.burner\n                ]\n            }\n            // }\n            // code_hash: {\n            //     eq: \"d80dd077e56dd76af65b163b6da94cca9d2c8e62740d09d98f9a4459ac069958\",\n            // },\n        }\n    }\n        ;\n    const Stakes =\n    {\n        type: \"AggregateCollection\",\n        collection: \"accounts\",\n        fields: [\n            {\n                field: \"balance\",\n                fn: AggregationFn.SUM\n            }\n        ],\n        filter: {\n            code_hash: {\n                in: [\n                    utils.depoolV3CodeHash,\n                    utils.depoolBroxusCodeHash,\n                    utils.electorCodeHash\n                ]\n            }\n        }\n    };\n    const Givers =\n    {\n        type: \"AggregateCollection\",\n        collection: \"accounts\",\n        fields: [\n            {\n                field: \"balance\",\n                fn: AggregationFn.SUM\n            }\n        ],\n        filter: {\n            id: {\n                in: [\n                    ...utils.givers\n                ]\n            }\n        }\n    }\n\n    const Total = {\n        type: \"AggregateCollection\",\n        collection: \"accounts\",\n        fields: [\n            {\n                field: \"balance\",\n                fn: AggregationFn.SUM\n            }\n        ]\n    }\n\n    const coldTons = (await client.net.query({\n        \"query\": `        \n            {aggregateAccounts(\n            filter:{      \n              acc_type: {\n                ne: 1\n              }              \n            }\n            fields:[\n              {field: \"balance\", fn: SUM}\n            ]\n          )}\n        ` })).result.data.aggregateAccounts[0];\n\n    const operations = [Burning, Stakes, Givers, Total];\n\n    try {\n        const response = await client.net.batch_query({\n            operations\n        });\n\n        const BurningAssets = Math.round(response.results[0][0] / utils.oneTon);\n        const StakesAssets = Math.round(response.results[1][0] / utils.oneTon);\n        const GiversAssets = Math.round(response.results[2][0] / utils.oneTon);\n        const TotalAssets = Math.round(response.results[3][0] / utils.oneTon);\n        const coldTonsAssets = Math.round(coldTons / utils.oneTon);\n        const UsersAssets = TotalAssets - GiversAssets - StakesAssets - BurningAssets - coldTonsAssets;\n \n        const BurningAssetsPercents = Math.round(BurningAssets / TotalAssets * 100);\n        const StakesAssetsPercents = Math.round(StakesAssets / TotalAssets * 100);\n        const GiversAssetsPercents = Math.round(GiversAssets / TotalAssets * 100);\n        const UsersAssetsPercents = Math.round(UsersAssets / TotalAssets * 100);\n        const coldTonsPercents = Math.round(coldTonsAssets / TotalAssets * 100);\n\n        return {\n            assets: [\n                BurningAssets,\n                StakesAssets,\n                GiversAssets,\n                UsersAssets,\n                coldTonsAssets\n            ],\n            labels: [\n                `BURNED: ${commaNumber(BurningAssets)} EVERs(${BurningAssetsPercents})%`,\n                `STAKES: ${commaNumber(StakesAssets)} EVERs(${StakesAssetsPercents})%`,\n                `GIVERS: ${commaNumber(GiversAssets)} EVERs(${GiversAssetsPercents})%`,\n                `FREE CIRCULATION: ${commaNumber(UsersAssets)} EVERs(${UsersAssetsPercents})%`,\n                `COLD EVERS: ${commaNumber(coldTonsAssets)} EVERs(${coldTonsPercents})%`\n            ]\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nmodule.exports = {\n    stakesGiversUsers\n}"],"sourceRoot":""}